# If not running interactively, don't do anything:
[ -z "$PS1" ] && return
shopt -s checkwinsize

case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
    ;;
*)
    ;;
esac

# checks if branch has something pending
function parse_git_dirty() {
	git diff --quiet --ignore-submodules HEAD 2>/dev/null; [ $? -eq 1 ] && echo "*"
}

# gets the current git branch
function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# get last commit hash prepended with @ (i.e. @8a323d0)
function parse_git_hash() {
	git rev-parse --short HEAD 2> /dev/null | sed "s/\(.*\)/@\1/"
}

function git_prompt() {
	[ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1 && echo " ($(parse_git_branch)$(parse_git_hash)) "
}

export PS1='\[\033[01;34m\]\w\[\033[00m\]$(git_prompt)\n'

if [[ $UID -eq 0 ]]; then
	export PS1="$PS1\[\033[01;31m\]\u\[\033[00m\]@\[\033[01;35m\]\H\[\033[00m\]"
elif [[ "$SSH_CONNECTION" != '' ]]; then
	export PS1="$PS1\[\033[01;32m\]\u\[\033[00m\]@\[\033[01;35m\]\H\[\033[00m\]"
fi

export PS1="$PS1\$ "
